#leetcode


typedef pair<int,int> pi;
    vector<int> topKFrequent(vector<int>& arr, int k) {
        unordered_map<int,int> mp;

        for(int i=0; i<arr.size(); i++){
            mp[arr[i]]++;
        }
        
        priority_queue<pi, vector<pi> , greater<pi>> pq ;
        for(auto x : mp){
            pq.push({x.second,x.first});
            if(pq.size()>k)
                pq.pop();
        }

        vector<int> ans;
        while(pq.size()>0){
            int elmt = pq.top().second ;
            ans.push_back(elmt);
            pq.pop();
        }
        return ans;
    }
