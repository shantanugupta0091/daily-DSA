#leetcode




class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int> map1;
        int n = nums.size();
        vector<int> count;

        for(int i=0 ; i<n ; i++){
            int x = target - nums[i]; // we use abs to avoid case when target > elmt
            if(map1.find(x)!=map1.end()){
                count.push_back(i);
                count.push_back(map1[x]);
                return count;
            }
            else{
                map1[nums[i]] = i;
            }
        }
        return count;

    }
};
