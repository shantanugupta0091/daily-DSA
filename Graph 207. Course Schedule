#leetcode
Graph
https://leetcode.com/problems/course-schedule/description/




bool cycleDetector(int src, vector<bool>& vis, vector<bool>& recPath,
                       vector<vector<int>>& prerequisites) {

        vis[src] = true;
        recPath[src] = true;

        for (int i = 0; i < prerequisites.size(); i++) {
            int negibhour = prerequisites[i][0];
            if (prerequisites[i][1] == src) {
                if (!vis[negibhour]) {
                    if (cycleDetector(prerequisites[i][0], vis, recPath,
                                      prerequisites))
                        return true;
                } else {
                    if (recPath[negibhour])
                        return true;
                }
            }
        }
        recPath[src] = false;
        return false;
    }

    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        int V = numCourses;
        vector<bool> vis(V, false);
        vector<bool> recPath(V, false);

        for (int i = 0; i < V; i++) {
            if (!vis[i]) {
                if (cycleDetector(i, vis, recPath, prerequisites))
                    return false;
            }
        }
        return true;
    }
