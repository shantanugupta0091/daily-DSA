#leetcode



bool isPalindrome(ListNode* head) {
        //finding mid of LL
        ListNode* fast = head;
        ListNode* slow = head;

        while (fast != NULL && fast->next != NULL) {
            fast = fast->next->next;
            slow = slow->next;
            
        }

        //reversing half part of LL

        ListNode* prev = NULL;
        ListNode* curr = slow;
        ListNode* forward = NULL ;

        while(curr!=NULL){
            forward = curr->next ;
            curr->next = prev; 
            prev = curr; 
            curr = forward;
        }

        //checking 2nd half with 1st half
        
        ListNode* temp = head;
        while(prev!=NULL){
            if(head->val != prev->val) 
                return false;
            head = head->next ;
            prev = prev->next ;
        }
        return true;
    }
